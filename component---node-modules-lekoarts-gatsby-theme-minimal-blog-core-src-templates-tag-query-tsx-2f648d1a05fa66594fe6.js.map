{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-2f648d1a05fa66594fe6.js","mappings":"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","sources":["webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\nexport type MBTagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n  }\n}\n\nconst Tag = ({ posts, pageContext }: MBTagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n\nexport const Head: HeadFC<unknown, { name: string }> = ({ pageContext }) => <Seo title={`Tag: ${pageContext.name}`} />\n","import { graphql } from \"gatsby\"\nimport TagComponent, { Head } from \"../components/tag\"\n\nexport default TagComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag, { Head } from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Box mb={4}>\n      <Link to={replaceSlashes(`/${basePath}/${blogPath}/${post.slug}`)} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n        {post.title}\n      </Link>\n      <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n        <time>{post.date}</time>\n        {post.tags && showTags && (\n          <React.Fragment>\n            {` â€” `}\n            <ItemTags tags={post.tags} />\n          </React.Fragment>\n        )}\n      </p>\n    </Box>\n  )\n}\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","jsx","Layout","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","name","Link","t","styles","_t$styles","a","to","replaceSlashes","Listing","mt","Head","Seo","title","props","allPost","data","React","Tag","nodes","tags","map","tag","i","key","slug","post","showTags","blogPath","Box","mb","fontSize","color","date","ItemTags","className","BlogListItem","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}