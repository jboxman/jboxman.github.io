{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-content-file-path-users-jasonb-self-repos-blog-content-pages-docs-projects-dam-index-mdx-68b96abec5fdbaba0e2d.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/pages/docs/projects/dam/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type MBPageProps = {\n  page: {\n    title: string\n    slug: string\n    excerpt: string\n  }\n}\n\nconst Page: React.FC<React.PropsWithChildren<PageProps<MBPageProps>>> = ({ data: { page }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {page.title}\n    </Heading>\n    <section sx={{ my: 5, variant: `layout.content` }}>{children}</section>\n  </Layout>\n)\n\nexport default Page\n\nexport const Head: HeadFC<MBPageProps> = ({ data: { page } }) => <Seo title={page.title} description={page.excerpt} />\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Page, { Head, MBPageProps } from \"../../../components/page\"\n\nexport default function MinimalBlogCorePage({ ...props }: PageProps<MBPageProps>) {\n  return <Page {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Proof of concept integrating \", React.createElement(_components.a, {\n    href: \"https://www.digikam.org\"\n  }, \"digiKam\"), \" and \", React.createElement(_components.a, {\n    href: \"https://git-annex.branchable.com\"\n  }, \"git-annex\"), \".\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/jboxman/dam\"\n  }, \"Available on GitHub\")), \"\\n\", React.createElement(_components.h2, null, \"Purpose\"), \"\\n\", React.createElement(_components.p, null, \"Because of how \", React.createElement(_components.code, null, \"git-annex\"), \" works, it isn't practical to use the working directory with digiKam:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Leaving all files in the \", React.createElement(_components.code, null, \"git-annex\"), \" repo unlocked doubles disk space usage, and using \", React.createElement(_components.code, null, \"thin\"), \" mode instead puts data at risk.\"), \"\\n\", React.createElement(_components.li, null, \"If the files are locked, digiKam cannot save XMP sidecar files; digiKam resolves symlinks, but \", React.createElement(_components.code, null, \"git-annex\"), \" does not allow files to be created in the \", React.createElement(_components.code, null, \".git/annex\"), \" directory.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"So this proof of concept implements a bi-directional sync between two directory trees.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"stagingDir\"), \": Directory of the \", React.createElement(_components.code, null, \"git\"), \" repo configured with \", React.createElement(_components.code, null, \"git-annex\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"digikamDir\"), \": Directory for digiKam files, including the SQLite database\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Additionally, the PoC implements:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Ingest image files into \", React.createElement(_components.code, null, \"photographers/<USER>/YYYY/MM/DD\")), \"\\n\", React.createElement(_components.li, null, \"Apply copyright metadata assignment to JPEG and NEF files\"), \"\\n\", React.createElement(_components.li, null, \"Apply image (JPEG) data rotation, with EXIF orientation reset\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Because digiKam is best for organizing photos, all tagging is managed there. So once ingested, the files are never moved or renamed again.\"), \"\\n\", React.createElement(_components.p, null, \"This is a working PoC. It includes limited error checks and no unit tests, so use at your own risk. But you're already managing your photos with \", React.createElement(_components.code, null, \"git-annex\"), \", with data replicated to multiple storage devices anyway, right?\"), \"\\n\", React.createElement(_components.h2, null, \"Commands\"), \"\\n\", React.createElement(_components.p, null, \"The following commands are available:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"dam --help\\nUsage: dam [options] [command]\\n\\nOptions:\\n  -h, --help                             output usage information\\n\\nCommands:\\n  what-can <photo-dir>                   List valid actions for a dir\\n  ingest [options] <photo-dir>           Move files into staging directory\\n  apply-copyright [options] <photo-dir>  Apply copyright to images\\n  apply-rotation [options] <photo-dir>   Rotate images and reset EXIF orientation flag\\n  sync [options]                         Sync data between photo and digiKam directories\\n  cleanup [options] <photo-dir>          Clean up backup files\\n  compare <source-dir> <target-dir>      Compare files in <source-dir> and <target-dir>\\n  rm-rejected [options]                  (not implemented) Remove files marked as rejected by digiKam\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Configuration\"), \"\\n\", React.createElement(_components.p, null, \"The configuration file lives in \", React.createElement(_components.code, null, \"~/.dam\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Defaults:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const defaultUser = process.env['USER'];\\nconst defaultUserDir = process.env['HOME'];\\nconst configDir = path.join(defaultUserDir, '.dam');\\nconst configFile = path.join(configDir, 'config.json');\\nconst exiftoolConfigFile = path.join(configDir, 'exiftool.conf');\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"Defaults:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"  const defaultConfig = {\\n    defaultUser,\\n    stagingDir: path.join(defaultUserDir, `Self/repos/photos/photographers`),\\n    digikamDir: path.join(defaultUserDir, `Self/repos/photos-dk/photographers`),\\n    photographers: {\\n      [defaultUser]: {\\n        copyrightArgs: path.join(configDir, `${defaultUser}-copyright.conf`)\\n      }\\n    }\\n  };\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"Example configuration for \", React.createElement(_components.a, {\n    href: \"https://exiftool.org\"\n  }, \"ExifTool\"), \". The user defined \", React.createElement(_components.code, null, \"MySequenceNum\"), \" is used to create a unique filename for each image when ingesting.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-perl\"\n  }, \"%Image::ExifTool::UserDefined = (\\n  # For XMP files, digiKam expects FILENAME.EXT.XMP\\n  'Image::ExifTool::Composite' => {\\n    Extension => {\\n      Require => {\\n        0 => 'FileName',\\n      },\\n      ValueConv => sub {\\n        my $val = shift;\\n        my $fn = @$val[0];\\n\\n        if($fn =~ /(\\\\.[^.]+)(\\\\.xmp)\\\\z/) {\\n          return $1;\\n        }\\n        return \\\"\\\";\\n      },\\n    },\\n\\n    MySequenceNum => {\\n      Desire => {\\n        0 => 'FileNumber',\\n        1 => 'DirectoryNumber',\\n        2 => 'Model',\\n      },\\n      ValueConv => sub {\\n        my $val = shift;\\n        my $sep = '-';\\n        my ($fileno, $dirno, $model) = @$val;\\n\\n        # These lack a sequence number at all.\\n        # With the model # may not need this.\\n        #if($model =~ /Nexus 4/) { return '0' x 7; }\\n        #if($model =~ /COOLPIX P100/) { return '0' x 7; }\\n        #if($model =~ /PowerShot A60/) { return $sep . $fileno; }\\n        if($model =~ /NIKON D3100/) {\\n          return sprintf('%s%03d%04d' , $sep, $dirno, $fileno);\\n        }\\n\\n        return \\\"\\\";\\n      },\\n    },\\n\\n  },\\n);\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Examples\"), \"\\n\", React.createElement(_components.p, null, \"Example of the annex repo:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"── photographers\\n   ├── jasonb\\n   │   ├── 2004\\n   │   │   ├── 06\\n   │   │   │   ├── 16\\n   │   │   │   │   ├── 20040616-004528.jpg -> ../../../../../.git/annex/objects/xG/32/WORM-s256444-m1087361128--photographers%jboxman%2004%06%16%20040616-004528.jpg/WORM-s256444-m1087361128--photographers%jboxman%2004%06%16%20040616-004528.jpg\\n   │   │   │   │   ├── 20040616-004528.jpg.json\\n   │   │   │   │   └── 20040616-004528.jpg.xmp\\n\")), \"\\n\", React.createElement(_components.p, null, \"Example of the digiKam repo:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"── db\\n│   ├── digikam4.db\\n│   ├── recognition.db\\n│   ├── similarity.db\\n│   └── thumbnails-digikam.db\\n── photographers\\n    └── jasonb\\n        ├── 2004\\n        │   ├── 06\\n        │   │   ├── 16\\n        │   │   │   ├── 20040616-004528.jpg\\n        │   │   │   └── 20040616-004528.jpg.xmp\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Known issues\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"When \", React.createElement(_components.code, null, \"exiftool\"), \" exits with a nonzero code, the error is not handled usefully\"), \"\\n\", React.createElement(_components.li, null, \"When renaming files with \", React.createElement(_components.code, null, \"exiftool\"), \", a filename collision causes an error\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"TODO\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Cleanup code\"), \"\\n\", React.createElement(_components.li, null, \"Add what-config to expose the runtime configuration\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/jasonb/Self/repos/blog/content/pages/docs/projects/dam/index.mdx\";\nimport PageComponent, {Head} from \"../components/page\";\nPageComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nvar query = \"3297325238\";\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["page","data","children","jsx","Layout","Heading","as","variant","title","sx","my","Head","Seo","description","excerpt","MinimalBlogCorePage","props","React","Page","pathname","image","canonicalUrl","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","name","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","a","h2","code","ul","li","pre","_provideComponents","components","className","MDXLayout","wrapper","GatsbyMDXWrapper","PageComponent","GATSBY_COMPILED_MDX","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}