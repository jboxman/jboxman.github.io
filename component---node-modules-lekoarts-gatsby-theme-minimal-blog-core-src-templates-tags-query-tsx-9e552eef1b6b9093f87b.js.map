{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tags-query-tsx-9e552eef1b6b9093f87b.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tags-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Box, Flex } from \"theme-ui\"\n// @ts-ignore\nimport { kebabCase } from \"@lekoarts/themes-utils\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Seo from \"./seo\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\nexport type MBTagsProps = {\n  list: {\n    fieldValue: string\n    totalCount: number\n  }[]\n}\n\nconst Tags = ({ list }: MBTagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Heading as=\"h1\" variant=\"styles.h1\">\n        Tags\n      </Heading>\n      <Box mt={[4, 5]}>\n        {list.map((listItem) => (\n          <Flex key={listItem.fieldValue} mb={[1, 1, 2]} sx={{ alignItems: `center` }}>\n            <Link\n              sx={(t) => ({ ...t.styles?.a, variant: `links.listItem`, mr: 2 })}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${kebabCase(listItem.fieldValue)}`)}\n            >\n              {listItem.fieldValue} <span sx={{ color: `secondary` }}>({listItem.totalCount})</span>\n            </Link>\n          </Flex>\n        ))}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const Head: HeadFC = () => <Seo title=\"Tags\" />\n","import { graphql } from \"gatsby\"\nimport TagsComponent, { Head } from \"../components/tags\"\n\nexport default TagsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query {\n    allPost(sort: { fields: tags___name, order: DESC }) {\n      group(field: tags___name) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tags, { Head } from \"../../../components/tags\"\n\ntype Props = {\n  data: {\n    allPost: {\n      group: {\n        fieldValue: string\n        totalCount: number\n      }[]\n    }\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTags({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tags list={allPost.group} {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["list","useMinimalBlogConfig","tagsPath","basePath","jsx","Layout","Heading","as","variant","Box","mt","map","listItem","Flex","key","fieldValue","mb","sx","alignItems","Link","t","styles","_t$styles","a","mr","to","replaceSlashes","kebabCase","color","totalCount","Head","Seo","title","props","allPost","data","React","Tags","group","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","name","content","property","rel","type","sizes","href","withPrefix","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}