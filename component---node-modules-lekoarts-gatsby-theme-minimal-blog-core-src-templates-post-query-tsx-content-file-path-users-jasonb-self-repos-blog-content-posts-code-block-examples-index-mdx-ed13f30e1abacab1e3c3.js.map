{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-jasonb-self-repos-blog-content-posts-code-block-examples-index-mdx-ed13f30e1abacab1e3c3.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/code-block-examples/SpotifyPlayer.js","webpack://minimal-blog/./content/posts/code-block-examples/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/* eslint react/no-unknown-property: 0 */\n/* eslint react/prefer-stateless-function: 0 */\n\n/**\n * Spotify player iframe widget\n *\n * @author Alexander Wallin <office@alexanderwallin.com>\n * @see https://developer.spotify.com/technologies/widgets/spotify-play-button/\n */\n\nimport * as React from \"react\"\n\n// Size presets, defined by Spotify\nconst sizePresets = {\n  large: {\n    width: 300,\n    height: 380,\n  },\n  compact: {\n    width: 300,\n    height: 80,\n  },\n}\n\nfunction SpotifyPlayer({ uri, view, theme, size }) {\n  return (\n    <iframe\n      title=\"Spotify\"\n      className=\"SpotifyPlayer\"\n      src={`https://embed.spotify.com/?uri=${uri}&view=${view}&theme=${theme}`}\n      width={sizePresets[size].width}\n      height={sizePresets[size].height}\n      frameBorder=\"0\"\n      allowtransparency=\"true\"\n    />\n  )\n}\n\nexport default SpotifyPlayer\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here will a React component go:\"), \"\\n\", React.createElement(SpotifyPlayer, {\n    uri: \"spotify:user:bbcamerica:playlist:3w18u69NplCpXVG4fQG726\",\n    size: \"large\",\n    theme: \"black\",\n    view: \"list\"\n  }), \"\\n\", React.createElement(_components.p, null, \"Here will a normal code block go:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"(function() {\\n\\nvar cache = {};\\nvar form = $('form');\\nvar minified = true;\\n\\nvar dependencies = {};\\n\\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\\nvar treePromise = new Promise(function(resolve) {\\n  $u.xhr({\\n    url: treeURL,\\n    callback: function(xhr) {\\n      if (xhr.status < 400) {\\n        resolve(JSON.parse(xhr.responseText).tree);\\n      }\\n    }\\n  });\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"A code block with a JSDoc comment, short, and long comment:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\n * Get value out of string (e.g. rem => px)\\n * If value is px strip the px part\\n * If the input is already a number only return that value\\n * @param {string | number} input\\n * @param {number} [rootFontSize]\\n * @return {number} Number without last three characters\\n * @example removeLastThree('6rem') => 6\\n */\\nconst getValue = (input, rootFontSize = 16) => {\\n  if (typeof input === `number`) {\\n    return input / rootFontSize;\\n  }\\n\\n  const isPxValue = input.slice(-2) === `px`;\\n\\n  if (isPxValue) {\\n    return parseFloat(input.slice(0, -2));\\n  }\\n\\n  return parseFloat(input.slice(0, -3));\\n};\\n\\n// This is a little helper function\\nconst helper = (a, b) => a + b;\\n\\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\\nconst morehelper = (a, b) => a * b;\\n\\nexport { getValue, helper, morehelper };\\n\")), \"\\n\", React.createElement(_components.p, null, \"Normal block without language:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Test from \\\"../components/test\\\"\\n\\nconst Layout = ({ children }) => (\\n  <Test>\\n    {children}\\n  </Test>\\n)\\n\\nexport default Layout\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with code highlighting:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    title: \"src/components/post.jsx\",\n    highlight: \"5-7,10\"\n  }, \"import * as React from \\\"react\\\";\\n\\nconst Post = ({ data: { post } }) => (\\n  <Layout>\\n    <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n      {post.title}\\n    </Heading>\\n    <p\\n      sx={{\\n        color: `secondary`,\\n        mt: 3,\\n        a: { color: `secondary` },\\n        fontSize: [1, 1, 2],\\n      }}\\n    >\\n      <span>{post.date}</span>\\n      {post.tags && (\\n        <React.Fragment>\\n          {` — `}\\n          <ItemTags tags={post.tags} />\\n        </React.Fragment>\\n      )}\\n    </p>\\n    <section\\n      sx={{\\n        ...CodeStyles,\\n        my: 5,\\n        \\\".gatsby-resp-image-wrapper\\\": { my: 5, boxShadow: `lg` },\\n      }}\\n    >\\n      <MDXRenderer>{post.body}</MDXRenderer>\\n    </section>\\n  </Layout>\\n);\\n\\nexport default Post;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block without title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Harry Potter and the Philosopher's Stone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-text\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and without lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\"\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title and with lineNumbers:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\",\n    withLineNumbers: true\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Line highlighting without code title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    highlight: \"2,4-5\"\n  }, \"const test = 3;\\nconst foo = \\\"bar\\\";\\nconst harry = \\\"potter\\\";\\nconst hermione = \\\"granger\\\";\\nconst ron = \\\"weasley\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here will \", React.createElement(_components.code, null, \"inline code\"), \" go, just inside the text. Wow!\"), \"\\n\", React.createElement(_components.p, null, \"Code block with line numbers, highlighting, language, and title:\"), \"\\n\", React.createElement(\"div\", {\n    \"data-testid\": \"code-block\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tsx\",\n    title: \"src/components/blog.tsx\",\n    highlight: \"7-9,16\",\n    withLineNumbers: true\n  }, \"import * as React from \\\"react\\\";\\n\\nconst Blog = ({ posts }: PostsProps) => {\\n  const { tagsPath, basePath } = useSiteMetadata();\\n\\n  return (\\n    <Layout>\\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\\n        <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n          Blog\\n        </Heading>\\n        <Styled.a\\n          as={Link}\\n          sx={{ variant: `links.secondary` }}\\n          to={`/${basePath}/${tagsPath}`.replace(/\\\\/\\\\/+/g, `/`)}\\n        >\\n          View all tags\\n        </Styled.a>\\n      </Flex>\\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\\n    </Layout>\\n  );\\n};\\n\\nexport default Blog;\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/jasonb/Self/repos/blog/content/posts/code-block-examples/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nvar query = \"2040642971\";\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","useMinimalBlogConfig","tagsPath","basePath","tag","i","key","Link","t","styles","_t$styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix","sizePresets","large","width","height","compact","uri","view","theme","size","className","frameBorder","allowtransparency","_createMdxContent","_components","Object","assign","p","pre","code","_provideComponents","components","SpotifyPlayer","highlight","withLineNumbers","MDXLayout","wrapper","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}