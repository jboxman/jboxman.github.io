{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-jasonb-self-repos-blog-content-posts-20221220-gmail-badge-index-mdx-ba7dffc1e5823da00d6b.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/20221220-gmail-badge/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Seo\n      title={post.title}\n      description={post.description ? post.description : post.excerpt}\n      image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n      pathname={replaceSlashes(`/${basePath}/${blogPath}/${post.slug}`)}\n      canonicalUrl={post.canonicalUrl}\n    />\n  )\n}\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"If you're a Gmail user, but want a native app like experience, you might be using the \", React.createElement(_components.em, null, \"Create shortcut...\"), \" feature available in Chrome and Chrome-based browsers, such as \", React.createElement(_components.a, {\n    href: \"https://vivaldi.com/download/\"\n  }, \"Vivaldi\"), \". This feature opens a specific URL, such as \", React.createElement(_components.code, null, \"https://gmail.com/\"), \", in a dedicated browser window and provides a separate icon on the dock (MacOS) or taskbar (Windows). But by default there's no badge counter for unread emails.\"), \"\\n\", React.createElement(_components.p, null, \"Fortunately, it is possible to add a badge by using the experimental \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/setAppBadge\"\n  }, React.createElement(_components.code, null, \"Navigator.setAppBadge()\"), \" API\"), \". This experimental API is available only in Chrome as of this writing. Here I am going to combine the badge API with \", React.createElement(_components.a, {\n    href: \"https://violentmonkey.github.io/get-it/\"\n  }, \"Violentmonkey\"), \", a browser extension that uses the \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions\"\n  }, \"WebExtension\"), \" APIs.\"), \"\\n\", React.createElement(_components.p, null, \"If you want to use the script, it is available from a \", React.createElement(_components.a, {\n    href: \"https://github.com/jboxman/gmail-badge\"\n  }, \"GitHub repository\"), \" in the \", React.createElement(_components.code, null, \"gmail-badge/dist/index.user.js\"), \" file.\"), \"\\n\", React.createElement(_components.p, null, \"Most of the work is performed by a \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\"\n  }, \"MutationObserver\"), \". The API is wrapped by \", React.createElement(_components.code, null, \"VM.observe\"), \" for convenience, and so we only need to provide a DOM element to monitor for mutations and a callback function:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    title: \"Mutation callback function\"\n  }, \"import * as VM from '@violentmonkey/dom';\\n\\nVM.observe(document.head, () => {\\n  const $el = document.querySelector('title');\\n  // https://github.com/developit/Gmail-unread-count-badge/blob/main/src/content.js\\n  let m = String($el.innerText).match(/Inbox(?: \\\\((\\\\d+)\\\\))? -/);\\n  if (m) navigator.setAppBadge(m[1] | 0 || null);\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"In the preceding code, we do the following:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Observe the \", React.createElement(_components.code, null, \"<head>\"), \" DOM element for any changes.\"), \"\\n\", React.createElement(_components.li, null, \"React to a change by querying the \", React.createElement(_components.code, null, \"<title>\"), \" DOM element, extracting the unread message count, and calling \", React.createElement(_components.code, null, \"navigator.setAppBadge\"), \" to set the badge number.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"By using a MutationObserver, we ensure that whenever Google updates the unread message count in the page title, we can update our unread messages icon badge.\"), \"\\n\", React.createElement(_components.p, null, \"For reference, \", React.createElement(_components.code, null, \"VM.observe\"), \" wraps the \", React.createElement(_components.code, null, \"MutationObserver.observe\"), \" method in the \", React.createElement(_components.a, {\n    href: \"https://github.com/violentmonkey/vm-dom\"\n  }, \"following way\"), \":\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\",\n    title: \"VM.observe() function\"\n  }, \"export function observe(\\n  node: Node,\\n  callback: (\\n    mutations: MutationRecord[],\\n    observer: MutationObserver\\n  ) => boolean | void,\\n  options?: MutationObserverInit\\n): () => void {\\n  const observer = new MutationObserver((mutations, ob) => {\\n    const result = callback(mutations, ob);\\n    if (result) disconnect();\\n  });\\n  observer.observe(\\n    node,\\n    Object.assign(\\n      {\\n        childList: true,\\n        subtree: true,\\n      },\\n      options\\n    )\\n  );\\n  const disconnect = () => observer.disconnect();\\n  return disconnect;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.a, {\n    href: \"https://github.com/jboxman/gmail-badge\"\n  }, \"source is available on GitHub\"), \" and the userscript lives at: \", React.createElement(_components.code, null, \"gmail-badge/dist/index.user.js\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/jasonb/Self/repos/blog/content/posts/20221220-gmail-badge/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nvar query = \"2040642971\";\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","useMinimalBlogConfig","basePath","blogPath","Seo","description","excerpt","image","banner","_post$banner","childImageSharp","_post$banner$childIma","resize","_post$banner$childIma2","src","undefined","pathname","replaceSlashes","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","tag","i","key","Link","t","styles","_t$styles","to","name","site","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","defaultImage","siteImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","p","em","code","pre","ul","li","_provideComponents","components","className","MDXLayout","wrapper","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","_objectDestructuringEmpty","obj","TypeError"],"sourceRoot":""}